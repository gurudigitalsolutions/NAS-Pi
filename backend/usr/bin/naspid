#!/bin/bash
#set -x
# Includes configuration files, if they exist
# The package defaults, then the global configuration, and last
# in the user directory.  The last read config file overwrites all
# other variables allowing more user end tweaks.  Be careful on the user's
# directory, it may need to be a full path without the ~/

PROG=${0##*/}
SRC_PATH=/etc/naspi/${PROG}.d

# Location of the mount control file
CONTROL_FILE="/tmp/naspid.control"

CONFIG_SET=FALSE
CONFIG_PATHS=("/etc/naspi" '~' '~/naspi')

for EACH_CONFIG in "${CONFIG_PATHS[@]}"; do
	
	if [[ -f $EACH_CONFIG/$PROG.conf ]]; then
		. "$EACH_CONFIG/$PROG.conf"
		CONFIG_SET=TRUE
	fi

done

# Verifies that at least one configuration was set

if [[ $CONFIG_SET = FALSE ]]; then
	error $E_CONFIG $M_CONFIG
fi


# Includes global functions for use by all sub shells and functions
INCLUDES=($(ls $SRC_PATH | grep ".include"))

for each_include in ${INCLUDES[@]}; do
	. $SRC_PATH/$each_include
done

# Listens for network input and writes it to control file. This file will
# be used to send commands to the daemon

#if [[ $# -gt 0 ]]; then
	#case $1 in
		#files)
			
RUN=TRUE
echo "Starting Listener" >> $LOG
while [[ $RUN = TRUE ]]; do
	nc -l $PORT > $CONTROL_FILE
	control	
	rm $CONTROL_FILE
	sleep .5
done
set +x
