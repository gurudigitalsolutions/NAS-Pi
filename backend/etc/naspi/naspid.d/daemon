#~ #!/bin/bash
#~ #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#~ #----###-----###---#####--#---#---###---#---#--------------------------------#
#~ #----#--#---#---#--#------##-##--#---#--##--#--------------------------------#
#~ #----#---#--#####--###----#-#-#--#---#--#-#-#--------------------------------#
#~ #----#--#---#---#--#------#---#--#---#--#--##--------------------------------#
#~ #----###----#---#--#####--#---#---###---#---#--------------------------------#
#~ #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
#~ 
#~ # Include the commit to fstab file
#~ 
#~ . $SRC_PATH/commit
#~ 
#~ # Reads and interprets the command file
#~ # Supports UPDATE <MOUNT> which checks given MOUNT for any changes
#~ 
#~ function control() {
	#~ set -x
	#~ CONTROL=($(cat $CONTROL_FILE))
	#~ 
	#~ case ${CONTROL[0]} in
		#~ update )
			#~ MOUNT=${CONTROL[1]}
			#~ ;;
		#~ kill | stop )
			#~ RUN=FALSE
			#~ ;;
		#~ *)
			#~ echo "${CONTROL[@]}"
			#~ #echo $E_CONTROL
			#~ #exit
			#~ ;;
	#~ esac
	#~ 
	#~ rm $CONTROL_FILE
	#~ set +x
#~ }
#~ 
#~ # Listens for network input and writes it to control file. This file will
#~ # be used to send commands to the daemon
#~ 
#~ function listen() {
	#~ set -x
	#~ RUN=TRUE
	#~ while [[ $RUN = TRUE ]]; do
		#~ nc -l $PORT > $CONTROL_FILE
		#~ control
		#~ #commit_mounts &
		#~ #mount_filesystem		
	#~ done
	#~ set +x
#~ }
#~ 
#~ 
#~ function start_daemon() {
#~ # Starts listening socket
	#~ #set -x
	#~ must_be_root
	#~ already_running
	#~ create_missing_directory $FSTAB_DIR
	#~ echo $PPID > $PID_FILE
	#~ trap 'rm $PID_FILE $CONTROL_FILE 2> /dev/null && exit' EXIT INT
	#~ listen
	#~ set +x 
#~ }
