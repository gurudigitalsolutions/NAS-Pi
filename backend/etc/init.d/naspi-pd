#!/bin/bash 
### BEGIN INIT INFO
# Provides:             naspi-pd
# Required-Start:       $remote_fs dbus udev
# Required-Stop:        $remote_fs dbus udev
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    NAS-Pi PHP Backend Daemon
# Description:          Handles administration of your Raspberry Pi using NAS-Pi.
### END INIT INFO
PROG="naspi"
INSTALL_DIR="/usr/share/$PROG"
DAEMON_SCRIPT="pd.php"
DAEMON_PATH="$INSTALL_DIR/pd"
LOG="/var/log/naspid.log"
ERRORS="$INSTALL_DIR"/errors
CONFIG=/etc/$PROG/${PROG}.conf

. $ERRORS

error() {
	echo "ERROR:$@"
	return $1
}

start() {
	#if [ -e "$NASPIPD_LOCK_FILE" ]; then
	#	error $E_START $M_START
	#else
	#	$DAEMON_PATH/$PROG start 2>&1 &
	#	touch "$NASPIPD_LOCK_FILE"
	#fi
	
	rm "/tmp/naspi/pd/pd.sock"
	$DAEMON_PATH/$DAEMON_SCRIPT start 2>&1 &
}

stop() {
	#if [ -e "$NASPIPD_LOCK_FILE" ]; then
	#	rm "$NASPIPD_LOCK_FILE"
	#	$DAEMON_PATH/$DAEMON_SCRIPT stop 2>&1 &
	#else
	#	error $E_STOP $M_STOP
	#fi
	
	$DAEMON_PATH/$DAEMON_SCRIPT stop 2>&1 &
}


if [ "$(id -u)" != "0" ]; then
	error $E_ROOT $M_ROOT
fi

case "$1" in
	start)
		start
		#if [[ $? -eq 0 ]]; then
		#	echo "$PROG started"
		#else
		#	echo "$PROG failed to $1"
		#fi
	;;
	stop)
		stop
		#if [[ $? -eq 0 ]]; then
		#	echo "$PROG stopped"
		#else
		#	echo "$PROG failed to $1" >2 >> $LOG
		#fi
	;;
	reload|restart|force-reload)
		stop
		start
		echo "$PROG restarted" >> $LOG &
		exit 0
		;;
	**)
		error $E_USAGE $M_USAGE
		;;
esac

:
